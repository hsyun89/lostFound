<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans
		https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/websocket 
	 	http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd">
	
	

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<task:annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/**" location="/resources/" /> -->
	<resources mapping="/resources/**" location="/resources/" />
    <resources mapping="/css/**" location="resources/css/"/>
    <resources mapping="/js/**" location="resources/js/"/>
    <resources mapping="/scss/**" location="resources/scss/"/>
    <resources mapping="/img/**" location="resources/img/"/>
    <resources mapping="/vendor/**" location="resources/vendor/"/>
	<!-- <resources mapping="/css/**" location="/resources/css" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<context:component-scan base-package="my.spring.mine" />
	
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO"
		class="my.spring.mine.NaverLoginBO" />
	
		<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

<!-- 	<context:component-scan base-package="handler" /> -->
	<context:component-scan base-package="service" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="vo" />

    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">

	<beans:property name="url" value="jdbc:mariadb://70.12.113.181:3306/lostfind" />
<!-- 	<beans:property name="url" value="jdbc:mariadb://localhost:3306/lostfind" /> -->
	<beans:property name="driverClassName" value="org.mariadb.jdbc.Driver"/>

	<beans:property name="username" value="root" />
	<beans:property name="password" value="password" />	
</beans:bean>
	
 <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">			
	<beans:property name="dataSource" ref="dataSource"/>
	<beans:property name="configLocation" value="classpath:/mybatis-config.xml"/>
	<beans:property name="mapperLocations" value="classpath:/*Mapper.xml"/> 	
</beans:bean> 

<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"  destroy-method="clearCache">
	<beans:constructor-arg index="0"  ref="sqlSessionFactory" ></beans:constructor-arg>
</beans:bean>


<beans:bean id="replyEchochoHandler" class="my.spring.mine.handler.EchoHandler" />
<websocket:handlers>
 <websocket:mapping handler="replyEchochoHandler" path="/replyEcho" />
 <websocket:handshake-interceptors>
      <beans:bean
          class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
 </websocket:handshake-interceptors>
</websocket:handlers>


	<util:properties id="config" location="classpath:/config/config.properties" />
	

	
</beans:beans>